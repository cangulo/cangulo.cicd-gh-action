name: Push a list of nuget packages

on:
  workflow_dispatch:
    inputs:
      creationmode:
        description: "Release or Prerelease"
        required: true
        default: "Prerelease"
      solutions:
        description: "Please, provide the solutions where the UT are stored. Separate values using comas, each name should match a *.sln file"
        required: true
      projects:
        description: "Please, provide the projects name that match with the .csproj"
        required: true
jobs:
  push-nuget-package:
    name: Test, Pack and Push Nuget Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cangulo/cangulo.build-docker-gh-action@master
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.NUGET_PUSH_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.NUGET_PUSH_AWS_SECRET }}
          aws-region: eu-west-1
      - name: Install AWS Credentials tools
        run: |
          export PATH="$PATH:/root/.dotnet/tools"
          dotnet tool install -g AWS.CodeArtifact.NuGet.CredentialProvider
          dotnet codeartifact-creds install
      - name: Add CodeArtifact nuget source
        id: setup-remote-nuget
        run: |
          domain="cangulo-common-domain"
          repo="cangulo-common-repo-internal"
          sourceName="cangulo-common-repo-internal"
          accountId=$(aws sts get-caller-identity --query Account --output text)
          sourceEndPoint=$(aws codeartifact get-repository-endpoint --domain $domain --domain-owner $accountId --repository $repo --format nuget --output text)
          sourceEndPoint=$sourceEndPoint"v3/index.json"
          authToken=$(aws codeartifact get-authorization-token --domain $domain --query authorizationToken)
          dotnet nuget add source $sourceEndPoint -n $sourceName -p $authToken -u aws --store-password-in-clear-text
          echo ::set-output name=SOURCE_NAME::$(echo $sourceName)
      - name: Construct ExecuteUnitTests Request
        id: request-execute-ut
        run: |
          solutions=${{ github.event.inputs.solutions }}
          EXECUTE_UT=$(cat <<-END
            {
                \"requestModel\":\"ExecuteUnitTests\",
                \"originator\":\"${{ github.actor }}-${{ github.event_name }}\",
                \"solutions\": [\"${solutions}\"]
            }
          END
          )
          echo ::set-output name=EXECUTE_UT::$(echo $EXECUTE_UT)
          echo "$EXECUTE_UT"
      - name: ExecuteUnitTests Nuke
        run: ./cangulo.build/cangulo.build --root . --target GenericRequestHandler --requestJSON "${{ steps.request-execute-ut.outputs.EXECUTE_UT }}" --verbosity verbose
      - name: Construct PackProjects Request
        id: request-pack-nuget
        run: |
          creationMode=${{ github.event.inputs.creationmode }}
          projects=${{ github.event.inputs.projects }}
          PACK_PROJECT=$(cat <<-END
            {
                \"requestModel\":\"PackProjects\",
                \"originator\":\"${{ github.actor }}-${{ github.event_name }}\",
                \"creationMode\": \"${creationMode}\", 
                \"projects\": [\"${projects}\"], 
                \"outputFolder\": \"artifacts\", 
                \"branch\": \"$(git branch --show-current)\"
            }
          END
          )
          echo ::set-output name=PACK_PROJECT::$(echo $PACK_PROJECT)
          echo "$PACK_PROJECT"
      - name: PackProjects Nuke
        run: ./cangulo.build/cangulo.build --root . --target GenericRequestHandler --requestJSON "${{ steps.request-pack-nuget.outputs.PACK_PROJECT }}" --verbosity verbose
      - name: Construct PushNugetPackages Request
        id: request-push-nuget
        run: |
          targetNugetRepository=${{ steps.setup-remote-nuget.outputs.SOURCE_NAME }}
          PUSH_NUGET=$(cat <<-END
            {
                \"requestModel\":\"PushNugetPackages\",
                \"originator\":\"${{ github.actor }}-${{ github.event_name }}\",
                \"nugetPackagesLocation\": \"artifacts\", 
                \"targetNugetRepository\": \"${targetNugetRepository}\"
            }
          END
          )
          echo ::set-output name=PUSH_NUGET::$(echo $PUSH_NUGET)
          echo "$PUSH_NUGET"
      - name: PushNugetPackages Nuke
        run: ./cangulo.build/cangulo.build --root . --target GenericRequestHandler --requestJSON "${{ steps.request-push-nuget.outputs.PUSH_NUGET }}" --verbosity verbose
